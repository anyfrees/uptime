# .github/workflows/build-electron-app.yml

name: Build Electron App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # node-version: [18.x, 20.x] # 可选指定 Node.js 版本

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x # 建议使用您项目兼容的 LTS 版本

    - name: Install dependencies (npm)
      run: npm ci # 使用 npm ci 通常比 npm install 更快且更可靠
      # 如果您使用 yarn，请替换为:
      # run: yarn install --frozen-lockfile

    # 移除了 "Install Windows build tools" 步骤，因为它已弃用并导致错误。
    # electron-builder 会自行处理其依赖（如 winCodeSign）。
    # 如果 winCodeSign 解压时仍然因为符号链接权限问题失败，
    # 这可能是 electron-builder 或其依赖的 winCodeSign 包本身的问题，
    # 在 Windows runner 上的处理方式。
    # 可以关注 electron-builder 的 issue tracker 获取相关问题的解决方案。

    - name: Build application
      run: npm run dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # CSC_LINK: ${{ secrets.CSC_LINK }} # 用于代码签名的证书 (Base64)
        # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }} # 证书密码
        # 如果您设置了代码签名，请取消注释上面的行并确保在 GitHub Secrets 中配置了这些变量。

    - name: Upload Windows Artifact
      if: matrix.os == 'windows-latest' && success()
      uses: actions/upload-artifact@v4
      with:
        name: proactive-monitor-windows-${{ github.run_id }}-${{ github.sha }}
        path: dist/*.exe 
        # path: dist/win-unpacked/ # 如果需要上传未打包的目录

    - name: Upload macOS Artifact
      if: matrix.os == 'macos-latest' && success()
      uses: actions/upload-artifact@v4
      with:
        name: proactive-monitor-macos-${{ github.run_id }}-${{ github.sha }}
        path: dist/*.dmg
        # path: dist/*.zip

    - name: Upload Linux Artifact
      if: matrix.os == 'ubuntu-latest' && success()
      uses: actions/upload-artifact@v4
      with:
        name: proactive-monitor-linux-${{ github.run_id }}-${{ github.sha }}
        path: dist/*.AppImage
        # path: dist/*.deb
        # path: dist/*.rpm
